version: 2

jobs:
  set-workspace:
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  sonar:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - run:
          name: Sonar analysis
          command: |
            curl -fL https://getcli.jfrog.io | sh
            chmod +x jfrog
            cp -R assets/licenses $ANDROID_HOME/

  compile_sdk:
    docker:
      - image: circleci/android:api-25-alpha
    steps:
      - run:
          name: Assamble
          command: |
            ./gradlew sambaplayersdk:lintRelease
            cd sambaplayersdk && ../gradlew assembleRelease --stacktrace
      - run:
          name: Sonar lint
          command: |
            wget https://s3.amazonaws.com/circleci-dependencies/player/sensitive-data/build-vars-enc
            openssl aes-256-cbc -d -in build-vars-enc -k $SENS_DATA_KEY >> ~/.circlerc
            curl --header "Authorization:token $GITHUB_USER_TOKEN" --header "Accept:application/vnd.github.v3.raw" --remote-name --location https://api.github.com/repos/sambatech/devops/contents/circle-ci/run-sonar.sh
            chmod a+x run-sonar.sh
            ./run-sonar.sh install
            ./run-sonar.sh run

  deploy_sdk_android:
    docker:
      - image: circleci/android:api-25-alpha
    steps:
      - run:
          name: Deploy on AWS S3 Bucket
          command: |
            if [ "${CIRCLE_BRANCH}" == "dev" ]; then
              assets/publish.sh $BINTRAY_USER $BINTRAY_API_KEY dev
            elif [ "${CIRCLE_BRANCH}" == "pre-release" ]; then
                     
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              assets/publish.sh $BINTRAY_USER $BINTRAY_API_KEY
            fi


workflows:
  version: 2
  player_andoid_sdk:
    jobs:
      - set-workspace
      - sonar:
          requires:
            - set-workspace
      - compile_sdk:
          requires:
            - sonar
      - deploy_sdk_android:
          requires:
            - compile_sdk
          filters:
            branches:
              only:
                - dev
                - prod
                - staging

      